=head1 jperms.pl

recursively set permissions and ownerships according to pattern rules

=head1 OPTIONS

jperms.pl [options]

 Options:
   -dir            directory to descend
   -file           patterns file
   -no_change      don't make changes, just show what would change
   -verbosity      repeat to increase
   -man            full documentation
   -help|-h|-?     help

=head1 DESCRIPTION

jperms.pl descends the specified directory tree applying permissions and
ownerships to each file or directory found according to a set
of pattern rules.

=head1 PATTERN RULES

Pattern rules are specified as lines in a file, optionally preceded by
whitespace.  Lines starting with a '#' are treated as B<comments> and ignored.

Each line consists of 5 fields separated by whitespace:

 pattern   owner   group   dir_mode   file_mode

A value of '-' for any field except pattern means that this field should be
ignored and the corresponding attribute for a matching file is to remain
un-altered.

=item pattern

- B<pattern> is a regex (NOT a fileglob!) to be matched against each path
found during the tree descent.

- Patterns are automatically surrounded by ^ and $ when matching, meaning
that a pattern must match the whole of the current path (not just part of it).

- file paths include the top level path exactly as specified on the command
line, so a pattern to match a *relative* top level directory (e.g.  "./dir")
must also match the dot (".") at the start of the path (e.g. with "\./dir")

- The path of each file or directory is compared against each pattern in turn
(top to bottom) until a match is found.  Matching for that path then
stops and the matched rule is applied to the file or directory..

=item owner and group

- B<owner> and B<group> fields must be specified as names; numeric ids
are not supported

- specifying a B<owner> or B<group> which does not exist will cause an error
message to be printed and the field will have no effect, i.e.  it will be
treated as if it were '-'

- files found during the descent with numeric owner or group ids (i.e. the user
or group does not exist on the host), are treated like any other file; i.e. new
B<owner> and/or B<group> will be applied as normal if a rules matches.

=item dir_mode & file_mode

- B<dir_mode> and B<file_mode> file or dir mode must be specified in octal;
leading zero is not required

- A B<dir_mode> or B<file_mode> value of 0 (or any string which evaluates to zero
when converted to a number) is treated as a '-'

- A pattern may match both files and directories, but B<dir_mode> is only ever
applied to directories, and B<file_mode> is only applied to files

- B<dir_mode> and B<file_mode> specify absolute permissions and are not
applied through any kind of mask.

=head1 OUTPUT

By default jperms.pl prints only a summary upon completion with the following
details:

- inspected: the number of objects (files or directories) inspected

- changed: the number of objects changed. Note: change of owner, group or mode,
or all three counts as a single change

- failed: the number of objects on which a changed failed. Note: failure to chmod or
chown (or both) counts as a single failure

- pending: the number of objects which need to be changed, but weren't changed
either due to error or -no_change mode.

Other output is controlled by the -verbosity level:

  0 summary
  1 objects & changes needed
  2 all objects (even if no change required)
  3 commands used to make changes
  3 pattern rules
  4 debug (patterns, current/target perms, filename)
  5 internal data structures

=head1 EXAMPLE PATTERN RULES

Example pattern file:

  # pattern                      owner   group  dmode  fmode

  \./test/data.*/proj/cards      appuser grp2    770   -
  \./test/data.*/proj/r/r_import appuser grp2    770   -
  \./test/data.*/proj/outbound   appuser adm    2770   -
  \./test/data.*/proj/.*/inbox   appuser grp2    770   -
  \./test/data.*/proj/[^/]+      appuser grp2    750   -
  \./test/data[^/]*/proj         appuser adm     750   -
  \./test/data.*/tws/logs        appuser grp2    770   -
  \./test/data.*/tws             appuser grp2    750   -
  \./test/data.*/logs            appuser grp2    770   -
  \./test/data.*/scripts         root    adm     750   -
  \./test/data.*                 appuser grp2    770   660
  \./test/.*                     -       -       -     -
  \./test                        appuser appgrp  775   -

